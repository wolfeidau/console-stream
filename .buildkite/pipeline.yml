steps:
  - # if: build.branch == "main"
    # if_changed: ".buildkite/Dockerfile.build"
    key: base_image
    label: ":docker: Create base image"
    command: |
      docker buildx build \
        --no-cache \
        --file .buildkite/Dockerfile.build \
        --platform linux/amd64,linux/arm64 \
        --tag "${DOCKER_REPOSITORY}" \
        --progress plain \
        --push .

      buildkite-agent annotate --style "success" ":rocket: Image pushed to $${DOCKER_REPOSITORY} :rocket:"

  - group: ":mag: QA"
    id: quality_checks
    depends_on: [base_image]
    steps:
      - key: lint
        label: ":golangci-lint: lint"
        command: golangci-lint run --verbose --timeout 3m
        image: "${DOCKER_REPOSITORY}"

      - key: test
        label: ":go: test"
        artifact_paths:
          - cover-tree.svg
          - coverage.out
        commands:
          - go test -coverprofile coverage.out -coverpkg=./... ./...
          - go run github.com/nikolaydubina/go-cover-treemap -coverprofile coverage.out > cover-tree.svg
          - echo '<details><summary>Coverage tree map</summary><img src="artifact://cover-tree.svg" alt="Test coverage tree map" width="70%"></details>' | buildkite-agent annotate --style "info"
        image: "${DOCKER_REPOSITORY}"